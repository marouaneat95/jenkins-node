"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.validateAttribute = validateAttribute;

var _lang = require("../lang");

var _logger = _interopRequireDefault(require("../logger"));

var log = (0, _logger.default)('');

function validateAttribute(attributeKey, attributeValue, method) {
  if (!(0, _lang.isString)(attributeKey) || attributeKey.length === 0) {
    log.warn(method + ": you passed an invalid attribute name, attribute name must be a non-empty string.");
    return false;
  }

  var isStringVal = (0, _lang.isString)(attributeValue);
  var isFiniteVal = (0, _lang.numberIsFinite)(attributeValue);
  var isBoolVal = (0, _lang.isBoolean)(attributeValue);
  var isArrayVal = Array.isArray(attributeValue);

  if (!(isStringVal || isFiniteVal || isBoolVal || isArrayVal)) {
    // If it's not of valid type.
    log.warn(method + ": you passed an invalid attribute value for " + attributeKey + ". Acceptable types are: string, number, boolean and array of strings.");
    return false;
  }

  return true;
}